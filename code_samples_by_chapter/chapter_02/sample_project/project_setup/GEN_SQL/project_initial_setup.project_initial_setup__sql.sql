/**
 * This file contains the SQL generated by compiling the project_initial_setup__sql() macro.
 *
 * The code to compile is:
{#
    {{ project_initial_setup__sql() }}
#}
 */


    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_SYSADMIN
        COMMENT = 'Sysadmin like role that will own for the resources of the STONKS project.';

    GRANT ROLE STONKS_SYSADMIN TO ROLE SYSADMIN;    

    /* == Create ONE WAREHOUSE for ALL envs => pass NO env name or pass/set single_WH to true == */
    
    USE ROLE SYSADMIN;

    /** 1 Create Warehouse */
    CREATE OR REPLACE WAREHOUSE STONKS_WH WITH
        WAREHOUSE_SIZE = XSMALL 
        AUTO_SUSPEND = 120                -- 120 seconds = 2 minutes
        AUTO_RESUME = TRUE
        INITIALLY_SUSPENDED = TRUE
        COMMENT = 'Warehouse for STONKS project.'
    ;

    /** 2 Assign Warehouse ownership to desired SysAdmin */
    GRANT OWNERSHIP ON WAREHOUSE STONKS_WH TO ROLE STONKS_SYSADMIN;

    /* == Create ALL environments, one at a time == */
        

    /* ---- create_env_database for DEV ---- */

    
    
    /** 1 ** Create the DB with the specified creator role (having Create DB privilege) */
    USE ROLE SYSADMIN;

    CREATE DATABASE IF NOT EXISTS STONKS_DEV
        COMMENT = 'Database for the DEV environment of the STONKS project.';

    /** 2 ** transfer ownership of DB to the desired owner role */
    GRANT OWNERSHIP ON DATABASE STONKS_DEV TO ROLE STONKS_SYSADMIN;
    GRANT ALL PRIVILEGES ON DATABASE STONKS_DEV TO ROLE STONKS_SYSADMIN;
    GRANT OWNERSHIP ON ALL SCHEMAS IN DATABASE STONKS_DEV TO ROLE STONKS_SYSADMIN;

  /* ---- create_functional_roles for DEV ---- */

    /** 1 ** Create the WRITER role (DB wide) and add it under the owner role */

    

    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_DEV_RW
        COMMENT = 'Functional role to provide Read/Write access to the DEV db of the STONKS project';

    GRANT ROLE STONKS_DEV_RW TO ROLE STONKS_SYSADMIN;

    /** 2 ** Create the READER role (DB wide) */

    

    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_DEV_RO
        COMMENT = 'Functional role to provide Read Only access to the DEV db of the STONKS project';

    GRANT ROLE STONKS_DEV_RO TO ROLE STONKS_SYSADMIN;

  /* ---- grants_to_writer_role for DEV ---- */

  USE ROLE STONKS_SYSADMIN;

  GRANT USAGE ON WAREHOUSE STONKS_WH TO ROLE STONKS_DEV_RW;

  GRANT USAGE ON DATABASE STONKS_DEV TO ROLE STONKS_DEV_RW;
  
  GRANT OWNERSHIP ON ALL SCHEMAS IN DATABASE STONKS_DEV TO ROLE STONKS_DEV_RW;
  GRANT CREATE SCHEMA ON DATABASE STONKS_DEV TO ROLE STONKS_DEV_RW;

  /* ---- grants_to_reader_role for DEV ---- */

    USE ROLE STONKS_SYSADMIN;

    GRANT USAGE ON WAREHOUSE STONKS_WH TO ROLE STONKS_DEV_RO;

    GRANT USAGE ON DATABASE STONKS_DEV TO ROLE STONKS_DEV_RO;

    GRANT USAGE ON ALL SCHEMAS IN DATABASE STONKS_DEV TO ROLE STONKS_DEV_RO;
    GRANT SELECT ON ALL TABLES IN DATABASE STONKS_DEV TO ROLE STONKS_DEV_RO;
    GRANT SELECT ON ALL VIEWS IN DATABASE STONKS_DEV TO ROLE STONKS_DEV_RO;

    
        USE ROLE SECURITYADMIN;

        GRANT USAGE ON FUTURE SCHEMAS IN DATABASE STONKS_DEV TO ROLE STONKS_DEV_RO;
        GRANT SELECT ON FUTURE TABLES IN DATABASE STONKS_DEV TO ROLE STONKS_DEV_RO;
        GRANT SELECT ON FUTURE VIEWS IN DATABASE STONKS_DEV TO ROLE STONKS_DEV_RO;
    
        
    
    USE ROLE SYSADMIN;
    GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE STONKS_DEV_RW;
        

    /* ---- create_env_database for QA ---- */

    
    
    /** 1 ** Create the DB with the specified creator role (having Create DB privilege) */
    USE ROLE SYSADMIN;

    CREATE DATABASE IF NOT EXISTS STONKS_QA
        COMMENT = 'Database for the QA environment of the STONKS project.';

    /** 2 ** transfer ownership of DB to the desired owner role */
    GRANT OWNERSHIP ON DATABASE STONKS_QA TO ROLE STONKS_SYSADMIN;
    GRANT ALL PRIVILEGES ON DATABASE STONKS_QA TO ROLE STONKS_SYSADMIN;
    GRANT OWNERSHIP ON ALL SCHEMAS IN DATABASE STONKS_QA TO ROLE STONKS_SYSADMIN;

  /* ---- create_functional_roles for QA ---- */

    /** 1 ** Create the WRITER role (DB wide) and add it under the owner role */

    

    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_QA_RW
        COMMENT = 'Functional role to provide Read/Write access to the QA db of the STONKS project';

    GRANT ROLE STONKS_QA_RW TO ROLE STONKS_SYSADMIN;

    /** 2 ** Create the READER role (DB wide) */

    

    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_QA_RO
        COMMENT = 'Functional role to provide Read Only access to the QA db of the STONKS project';

    GRANT ROLE STONKS_QA_RO TO ROLE STONKS_SYSADMIN;

  /* ---- grants_to_writer_role for QA ---- */

  USE ROLE STONKS_SYSADMIN;

  GRANT USAGE ON WAREHOUSE STONKS_WH TO ROLE STONKS_QA_RW;

  GRANT USAGE ON DATABASE STONKS_QA TO ROLE STONKS_QA_RW;
  
  GRANT OWNERSHIP ON ALL SCHEMAS IN DATABASE STONKS_QA TO ROLE STONKS_QA_RW;
  GRANT CREATE SCHEMA ON DATABASE STONKS_QA TO ROLE STONKS_QA_RW;

  /* ---- grants_to_reader_role for QA ---- */

    USE ROLE STONKS_SYSADMIN;

    GRANT USAGE ON WAREHOUSE STONKS_WH TO ROLE STONKS_QA_RO;

    GRANT USAGE ON DATABASE STONKS_QA TO ROLE STONKS_QA_RO;

    GRANT USAGE ON ALL SCHEMAS IN DATABASE STONKS_QA TO ROLE STONKS_QA_RO;
    GRANT SELECT ON ALL TABLES IN DATABASE STONKS_QA TO ROLE STONKS_QA_RO;
    GRANT SELECT ON ALL VIEWS IN DATABASE STONKS_QA TO ROLE STONKS_QA_RO;

    
        USE ROLE SECURITYADMIN;

        GRANT USAGE ON FUTURE SCHEMAS IN DATABASE STONKS_QA TO ROLE STONKS_QA_RO;
        GRANT SELECT ON FUTURE TABLES IN DATABASE STONKS_QA TO ROLE STONKS_QA_RO;
        GRANT SELECT ON FUTURE VIEWS IN DATABASE STONKS_QA TO ROLE STONKS_QA_RO;
    
        
    
    USE ROLE SYSADMIN;
    GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE STONKS_QA_RW;
        

    /* ---- create_env_database for PROD ---- */

    
    
    /** 1 ** Create the DB with the specified creator role (having Create DB privilege) */
    USE ROLE SYSADMIN;

    CREATE DATABASE IF NOT EXISTS STONKS_PROD
        COMMENT = 'Database for the PROD environment of the STONKS project.';

    /** 2 ** transfer ownership of DB to the desired owner role */
    GRANT OWNERSHIP ON DATABASE STONKS_PROD TO ROLE STONKS_SYSADMIN;
    GRANT ALL PRIVILEGES ON DATABASE STONKS_PROD TO ROLE STONKS_SYSADMIN;
    GRANT OWNERSHIP ON ALL SCHEMAS IN DATABASE STONKS_PROD TO ROLE STONKS_SYSADMIN;

  /* ---- create_functional_roles for PROD ---- */

    /** 1 ** Create the WRITER role (DB wide) and add it under the owner role */

    

    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_PROD_RW
        COMMENT = 'Functional role to provide Read/Write access to the PROD db of the STONKS project';

    GRANT ROLE STONKS_PROD_RW TO ROLE STONKS_SYSADMIN;

    /** 2 ** Create the READER role (DB wide) */

    

    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_PROD_RO
        COMMENT = 'Functional role to provide Read Only access to the PROD db of the STONKS project';

    GRANT ROLE STONKS_PROD_RO TO ROLE STONKS_SYSADMIN;

  /* ---- grants_to_writer_role for PROD ---- */

  USE ROLE STONKS_SYSADMIN;

  GRANT USAGE ON WAREHOUSE STONKS_WH TO ROLE STONKS_PROD_RW;

  GRANT USAGE ON DATABASE STONKS_PROD TO ROLE STONKS_PROD_RW;
  
  GRANT OWNERSHIP ON ALL SCHEMAS IN DATABASE STONKS_PROD TO ROLE STONKS_PROD_RW;
  GRANT CREATE SCHEMA ON DATABASE STONKS_PROD TO ROLE STONKS_PROD_RW;

  /* ---- grants_to_reader_role for PROD ---- */

    USE ROLE STONKS_SYSADMIN;

    GRANT USAGE ON WAREHOUSE STONKS_WH TO ROLE STONKS_PROD_RO;

    GRANT USAGE ON DATABASE STONKS_PROD TO ROLE STONKS_PROD_RO;

    GRANT USAGE ON ALL SCHEMAS IN DATABASE STONKS_PROD TO ROLE STONKS_PROD_RO;
    GRANT SELECT ON ALL TABLES IN DATABASE STONKS_PROD TO ROLE STONKS_PROD_RO;
    GRANT SELECT ON ALL VIEWS IN DATABASE STONKS_PROD TO ROLE STONKS_PROD_RO;

    
        USE ROLE SECURITYADMIN;

        GRANT USAGE ON FUTURE SCHEMAS IN DATABASE STONKS_PROD TO ROLE STONKS_PROD_RO;
        GRANT SELECT ON FUTURE TABLES IN DATABASE STONKS_PROD TO ROLE STONKS_PROD_RO;
        GRANT SELECT ON FUTURE VIEWS IN DATABASE STONKS_PROD TO ROLE STONKS_PROD_RO;
    
        
    
    USE ROLE SYSADMIN;
    GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE STONKS_PROD_RW;


    /* == Setup ORGANIZATIONAL ROLES == */
    

    /** CREATE ORGANIZATIONAL ROLES */ 
    

    

    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_DBT_EXECUTOR_ROLE
        COMMENT = 'Organizational role for the dbt user (RW access to all environments)';

    GRANT ROLE STONKS_DBT_EXECUTOR_ROLE TO ROLE STONKS_SYSADMIN;

    

    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_DEVELOPER
        COMMENT = 'Organizational role for the developers of the dbt project (RW access to DEV and RO to other environments)';

    GRANT ROLE STONKS_DEVELOPER TO ROLE STONKS_SYSADMIN;

    

    USE ROLE USERADMIN;

    CREATE ROLE IF NOT EXISTS STONKS_READER
        COMMENT = 'Organizational role for the readers of ALL the data from the dbt project (RO access to all layers of QA and PROD environments)';

    GRANT ROLE STONKS_READER TO ROLE STONKS_SYSADMIN;

    /** ASSIGN FUNCTIONAL ROLES to ORG ROLES */

    USE ROLE USERADMIN;

    /* DBT EXECUTOR */
        GRANT ROLE STONKS_DEV_RW TO ROLE STONKS_DBT_EXECUTOR_ROLE;
        GRANT ROLE STONKS_QA_RW TO ROLE STONKS_DBT_EXECUTOR_ROLE;
        GRANT ROLE STONKS_PROD_RW TO ROLE STONKS_DBT_EXECUTOR_ROLE;


    /* DEVELOPER */
            GRANT ROLE STONKS_DEV_RW TO ROLE STONKS_DEVELOPER;
            GRANT ROLE STONKS_QA_RO TO ROLE STONKS_DEVELOPER;
            GRANT ROLE STONKS_PROD_RO TO ROLE STONKS_DEVELOPER;


    /* READER */
        GRANT ROLE STONKS_DEV_RO TO ROLE STONKS_READER;
        GRANT ROLE STONKS_QA_RO TO ROLE STONKS_READER;
        GRANT ROLE STONKS_PROD_RO TO ROLE STONKS_READER;

    /* == TO Create and Setup USERS => go to sample_prj__manage_users and run refresh_user_roles___XXXX_project()  == */
